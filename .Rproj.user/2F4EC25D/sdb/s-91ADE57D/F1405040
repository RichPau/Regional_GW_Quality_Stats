{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Regional Inorganic Groundwater Quality Trends in California's Tulare Basin\"\nauthor: \"Rich Pauloo\"\ndate: \"August 22, 2017\"\noutput: \n  html_document:\n    toc: TRUE\n    smooth_scroll: FALSE\n    fig_width: 9\n    fig_height: 6\nbibliography: Tulare_TDS_ref.bib\n---\n\n***\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n##### This analysis explores inorganic groundwater contamination from Total Dissolved Solids (TDS) in the Tulare Basin, California. Data was generously provided by [CV-SALTS](https://www.cvsalinity.org/) and [CDM Smith](https://cdmsmith.com/), and aggregated from:\n\n* United States Geologic Survey[^1]\n* California Department of Public Health[^2] \n* Groundwater Ambient Monitoring and Assessment Program[^3]  \n* Environmental Defense Fund[^4]\n* California Department of Water Resources[^5]\n* independent dairy farm monitoring wells\n\n##### All data cleaning, analysis, and mapping was carried out within R version 1.0.143.  \n\n##### All scripts, versions, data input files, and documentation for this project can be found in [this Github repository.](https://github.com/RichPau/Regional_GW_Quality_Stats)\n\n***\n\n# Summary\n* Groundwater quality data in the Tulare Basin is well-distributed spatially, with more data spatially concentrated near the urban centers of Fresno and Bakersfield. \n* Temporally, groundwater quality data ranges from 1902-2014. Data is sparse and uneven from 1902-1983, and generally more robust from 1980-2014. \n* Temporally continuous individual well data is much less common than discontinuous data, which may come from a multitide of wells collected at uneven intervals. Continuous and discontinuous data were examined separately to isolate increases in TDS in individual wells over time, and together to increase regional spatial coverage.\n* Continuous and discountinuous data from shallow and deep wells show increases in measured TDS, which suggests depreciation of regional groundwater quality in the Tulare Basin.\n* The lack of a regionally-extensive, long-term groundwater quality monitoring network demonstrates the importance of monitoring water quality on a regional level.\n\n***\n\n# Code\n\n### Load Data and Required Packages\n```{r set wd, load required packages, and load data, warning = FALSE, messages = FALSE, results=\"hide\", errors = FALSE}\n#setwd(\"E:/rpauloo/Documents/GitHub/Contaminant-Mapping\")\n#setwd(\"/Users/richpauloo/Documents/GitHub/Regional_GW_Quality_Stats\")\n\nrequired.packages <- c(\"sp\", \"XML\", \"rgdal\", \"rgeos\", \"raster\", \"ggplot2\", \n                       \"dismo\", \"leaflet\", \"RColorBrewer\", \"classInt\", \"dplyr\", \n                       \"EnvStats\", \"maps\", \"mapdata\", \"cowplot\", \"scales\")\nsuppressMessages(lapply(required.packages, require, character.only = TRUE))\n\ndat = read.csv(file = \"TDS_Features_Tulare_Clip_TableToExcel.csv\", stringsAsFactors = FALSE) # 54,171 total observations\n\n# add dates to dat\ndat <- dat %>% \n  mutate(Date = as.Date(Samp_Date))\n```\n\n### Define Useful Functions\n```{r}\n# Hadley Wickham's set of functions to convert spatial objects into dataframes\nfortify.SpatialPolygonsDataFrame <- function(shape, region = NULL) { \n attr <- as.data.frame(shape) \n # If not specified, split into regions based on first variable in attributes \n if (is.null(region)) { \n   region <- names(attr)[1] \n   message(\"Using \", region, \" to define regions.\") \n } \n\n # Figure out how polygons should be split up into the region of interest \n polys <- split(as.numeric(row.names(attr)), attr[, region]) \n cp <- polygons(shape) \n\n # Union together all polygons that make up a region \n try_require(c(\"gpclib\", \"maptools\")) \n unioned <- unionSpatialPolygons(cp, invert(polys)) \n\n coords <- fortify(unioned) \n coords$order <- 1:nrow(coords) \n coords \n} \n\nfortify.SpatialPolygons <- function(model, data, ...) { \n plyr::ldply(model@polygons, fortify) \n} \n\nfortify.Polygons <- function(model, data, ...) { \n subpolys <- model@Polygons \n pieces <- plyr::ldply(seq_along(subpolys), function(i) { \n   df <- fortify(subpolys[[model@plotOrder[i]]]) \n   df$piece <- i \n   df \n }) \n\n within(pieces,{ \n   order <- 1:nrow(pieces) \n   id <- model@ID \n   piece <- factor(piece) \n   group <- interaction(id, piece) \n }) \n} \n\nfortify.Polygon <- function(model, data, ...) { \n df <- as.data.frame(model@coords) \n names(df) <- c(\"long\", \"lat\") \n df$order <- 1:nrow(df) \n df$hole <- model@hole \n df \n} \n\nfortify.SpatialLinesDataFrame <- function(model, data, ...) { \n ldply(model@lines, fortify) \n} \n\nfortify.Lines <- function(model, data, ...) { \n lines <- model@Lines \n pieces <- plyr::ldply(seq_along(lines), function(i) { \n   df <- fortify(lines[[i]]) \n   df$piece <- i \n   df \n }) \n\n within(pieces,{ \n   order <- 1:nrow(pieces) \n   id <- model@ID \n   piece <- factor(piece) \n   group <- interaction(id, piece) \n }) \n} \n\nfortify.Line <- function(model, data, ...) { \n df <- as.data.frame(model@coords) \n names(df) <- c(\"long\", \"lat\") \n df$order <- 1:nrow(df) \n df \n}\n```\n\n### Data Wrangling\n```{r Data Wrangling, warning = FALSE, message = FALSE, results = \"hide\"}\n# of the shallow and deep wells where we know depth class, how many don't have depth information?\nt <- dat %>% \n  filter(DepthClass == \"Shallow\" | DepthClass == \"Deep\") %>% \n  transmute(hasdepth = ifelse(!is.na(Depth_ft), TRUE, FALSE))\nsum(t$hasdepth)\nsum(!t$hasdepth)\n\n# filter observations with depth info, add time_period\ndat_with_depth <- dat %>% \n  filter(Depth_ft != \"NA\" | 0) %>% \n  mutate(time_period = \n           ifelse(Year %in% 1923:1959, \"1923-1959\",\n           ifelse(Year %in% 1960:1969, \"1960-1969\",\n           ifelse(Year %in% 1970:1979, \"1970-1979\",\n           ifelse(Year %in% 1980:1989, \"1980-1989\",                  \n           ifelse(Year %in% 1990:1999, \"1990-1999\",\n           ifelse(Year %in% 2000:2014, \"2000-2014\", NA))))))\n         )\n\nunique(dat_with_depth$Database) # all wells with depth information come from the USGS databse\nunique(dat_with_depth$time_period) # all time periods are represented\n\n# visualize\ndat_with_depth %>% \n  ggplot() +\n  geom_histogram(aes(x = Depth_ft)) + \n  xlab('depth (ft)') + \n  ggtitle('USGS Wells by depth') +\n  theme_light()\n# most wells are shallow (< 250 feet)\n\n# create depth classes\ndat_with_depth$Depth_ft <- round(dat_with_depth$Depth_ft) # round Depth_ft to avoid creating NAs in depth_class\n\ndat_with_depth <- dat_with_depth %>% \n  mutate(depth_class = \n           ifelse(Depth_ft %in% 0:249, \"0-249 ft\",\n           ifelse(Depth_ft %in% 250:749, \"250-749 ft\",\n           ifelse(Depth_ft %in% 750: 3000, \"750-3000 ft\", NA))))\n\n# visualize\ndat_with_depth %>% \n  ggplot() +\n  geom_bar(aes(x = depth_class, fill = time_period)) + \n  ggtitle('USGS wells by depth and time period') +\n  scale_x_discrete(limits = c('0-249 ft', '250-749 ft' , '750-3000 ft')) +\n  theme_light()\n```\n\n### Visualize USGS data - Develop Map Function for Time Period\n```{r visualize USGS data, warning = FALSE, message = FALSE, results = \"hide\"}\n# Is there sampling bias in the wells that have depth information to them? Let's look at the spatial distribution of these USGS wells which we have depth information for.\n\n# define coordinates\nwell_coords = cbind(dat_with_depth$Longitude, dat_with_depth$Latitude)\npts = SpatialPoints(well_coords)\n\n# deinfe color palette to be used. blue values correspond to fresh water, red to salty water\nco = c(\"blue\",\"steelblue2\",\"steelblue1\",\"seashell1\",\"orangered1\",\"red3\")\n\n# define map center for all maps and plug into setView\ncenter_coords <- dat_with_depth %>% \n  filter(depth_class == \"750-3000 ft\" & time_period == \"2000-2014\") %>% \n  summarise(latCenter = mean(Latitude) + .23,\n            lonCenter = mean(Longitude))\n\n# define map function\nmap.TDS.period = function(t, d){\n  # create time and depth class (t.d) subset for the t and d arguments  \n  t.d <-  dat_with_depth %>% \n    filter(time_period == t & depth_class == d) \n  \n  # create logical vector for all t and d indexes to extract coordinates of these observations\n  t.d.pts = ifelse(dat_with_depth$depth_class == d & \n                   dat_with_depth$time_period == t, TRUE, FALSE)\n  \n  # use logical vector to subset well_coords, and create spatial points data frame for time frame t and depth d\n  ptsdf = SpatialPointsDataFrame(pts[t.d.pts , ], data = t.d)\n  \n  # define palette based on time frame t and depth class d observations\n  # set bins with a vector of breaks, so they are fine from 0 - 1,000 and coarse from 1,000 - 50,000\n  pal = colorBin(palette = co,\n           domain = t.d$Result, bins = c(0,200,400,600,800,1000,\n                                          5000,10000,50000))\n  \n  # generate map assocaited with time frame t and depth d\n  map <- leaflet(data = ptsdf) \n  map <- addTiles(map)\n  map %>%\n    addCircleMarkers(\n      lng = well_coords[t.d.pts,1], # longitude\n      lat = well_coords[t.d.pts,2], # latitude\n      radius = 4, # fixed radius size\n      color = ~pal(Result),\n      stroke = FALSE, \n      fillOpacity = 0.8,\n      popup = paste(ptsdf$Result, \" mg/L TDS\", \"<br>\",\n                    \"Database: \", ptsdf$Database, \"<br>\",\n                    \"Well ID: \", ptsdf$Well_ID, \"<br>\",\n                    \"Latitude: \", ptsdf$Latitude, \"<br>\",\n                    \"Longitude: \", ptsdf$Longitude)\n    ) %>%\n    \n    addLegend(\"topright\", pal = pal, # use custom palette\n              values = ~Result,\n              title = paste(t, d, sep = \", \"), # legend displays time frame and depth class as title\n              labFormat = labelFormat(suffix = \" mg/L\"),\n              opacity = 1\n    ) %>%\n    \n    addProviderTiles(providers$Esri.WorldTerrain # override default map with ESRI world terrain map\n  \n    ) %>% \n    \n    setView(lng = center_coords$lonCenter, lat = center_coords$latCenter, zoom = 8) # iteratively changed zoom until it centered on the data\n}\n\n# run map function for all decades and depth classes\nt <- c(\"1923-1959\", \"1960-1969\", \"1970-1979\", \"1980-1989\", \"1990-1999\", \"2000-2014\")\nd <- c('0-249 ft', '250-749 ft', '750-3000 ft')\n\nfor(i in t){\n  for(j in d){\n    print(list(map.TDS.period(i,j)))\n  }\n}\n\n# spatial coverage of data depends on depth_class and time_frame. Deep and intermediate wells show high density around the urban centers of Fresno and Bakersfield. Shallow well data from 1980-1989, especially in the Eastern SJ Valley is very dense, likely the result of the emergence of non-point source contamination in the region and an effort to assess the magnitude and distribution of these patterns in groundwater quality. This widespread monitoring effort does not continue as time goes on.\n\n\n# redefine DepthClass\n# define coordinates\nwell_coords = cbind(dat$Longitude, dat$Latitude)\npts = SpatialPoints(well_coords)\n\n# deinfe color palette to be used. blue values correspond to fresh water, red to salty water\nco = c(\"blue\",\"steelblue2\",\"steelblue1\",\"seashell1\",\"orangered1\",\"red3\")\n\n# define map center for all maps and plug into setView\ncenter_coords <- dat %>% \n  filter(DepthClass == \"Shallow\") %>% \n  summarise(latCenter = mean(Latitude) - .35,\n            lonCenter = mean(Longitude))\n\n\n\n# define map function for depthClass \"Shallow\" and \"Deep\"\nleaflet_DepthClass = function(d){\n  # create time and depth class (t.d) subset for the t and d arguments  \n  t.d <-  dat %>% \n    filter(DepthClass == d) \n  \n  # create logical vector for all t and d indexes to extract coordinates of these observations\n  t.d.pts = ifelse(dat$DepthClass == d, TRUE, FALSE)\n  \n  # use logical vector to subset well_coords, and create spatial points data frame for time frame t and depth d\n  ptsdf = SpatialPointsDataFrame(pts[t.d.pts , ], data = t.d)\n  \n  # define palette based on time frame t and depth class d observations\n  # set bins with a vector of breaks, so they are fine from 0 - 1,000 and coarse from 1,000 - 50,000\n  pal = colorBin(palette = co,\n           domain = t.d$Result, bins = c(0,200,400,600,800,1000,\n                                          5000,10000,50000))\n  \n  # generate map assocaited with time frame t and depth d\n  map <- leaflet(data = ptsdf) \n  map <- addTiles(map)\n  map %>%\n    addCircleMarkers(\n      lng = well_coords[t.d.pts,1], # longitude\n      lat = well_coords[t.d.pts,2], # latitude\n      radius = 4, # fixed radius size\n      color = ~pal(Result),\n      stroke = FALSE, \n      fillOpacity = 0.8,\n      popup = paste(ptsdf$Result, \" mg/L TDS\", \"<br>\",\n                    \"Database: \", ptsdf$Database, \"<br>\",\n                    \"Well ID: \", ptsdf$Well_ID, \"<br>\",\n                    \"Latitude: \", ptsdf$Latitude, \"<br>\",\n                    \"Longitude: \", ptsdf$Longitude)\n    ) %>%\n    \n    addLegend(\"topright\", pal = pal, # use custom palette\n              values = ~Result,\n              title = paste(d, \"wells\", sep=\" \"), # legend displays depth class as title\n              labFormat = labelFormat(suffix = \" mg/L\"),\n              opacity = 1\n    ) %>%\n    \n    addProviderTiles(providers$Esri.WorldTerrain # override default map with ESRI world terrain map\n  \n    ) %>% \n    \n    setView(lng = center_coords$lonCenter, lat = center_coords$latCenter, zoom = 8) # iteratively changed zoom until it centered on the data\n}\n```\n\n### Locate Possible Duplicate Wells between USGS and other Databases\n```{r, warning = FALSE, message = FALSE, results = \"hide\"}\ndat_USGS <- dat_with_depth\ndat_other <- dat %>% \n  filter(Database != \"USGS\")\n\nmerge(dat_USGS, dat_other, by = c(\"Latitude\", \"Longitude\"))\n\n# no well lat/lng coordiantes within the USGS database match well coordinates within the other databases. This indicates that USGS has never taken over wells from another database, or passed on responsibility for monitoring its own wells. This means we cannot infer the depth of wells from other databases based on the Depth_ft information we have in the USGS database.\n```\n\n### Depth and TDS initial condition (1960)\n```{r, warning = FALSE, message = FALSE, results = \"hide\"}\n# for the earliest decade:\nboundary_condition <- dat_with_depth %>% \n  filter(Year <= 1960, Result <= 2000) %>% # start near the beginning of 1960 to set broundary conditions of model, filter out excessively contaminated wells to see the actaul pattern in groundwater TDS\n  ggplot() +\n  geom_point(aes(x = -Depth_ft, y = Result, color = depth_class)) +\n  geom_smooth(aes(x = -Depth_ft, y = Result), color = \"black\") +\n  ylab('TDS (mg/L)') +\n  xlab('Depth (ft)') + \n  labs(color = 'Depth Class') + \n  coord_flip() +\n  theme_light()\n\n# view plot\nboundary_condition\n\n# extract regression model\nboundary_dat <- ggplot_build(boundary_condition)$data[[2]]\n\nggplot(boundary_dat) +\n  geom_point(aes(x = y, y = x))\n\n# we will use this data to set the boundary conditions for the mixing cell model\n```\n\n### Prepare Basemaps Maps for Next Sections\n```{r, warning = FALSE, message = FALSE, results = \"hide\", error = FALSE}\n\n# create dataframe with coordinates for Fresno and Bakersfield, to act as markers\ncities <- data.frame(city = c('Fresno', 'Bakersfield', 'Visalia'),\n                     longitude = c(-119.7726, -119.0187, -119.2921), \n                     latitude = c(36.7468, 35.3733, 36.3302)\n                     )\n\n# load Bulletin 118 GW basin shapefiles\nlibrary(rgdal)\nlibrary(maptools)\ns <- shapefile(file.path(PROJHOME, 'shapefiles','I08_B118_CA_GroundwaterBasins.shp'))\n\n# get tulare basin and other gw basins\nlibrary(spdplyr) # load spdplyr for operating on spatial objects\ns %>% \n  filter(Basin_ID == '5-22') %>% \n  arrange(Basin_Subb) -> tulare_alluvial\ntulare_alluvial <- tulare_alluvial[8:14, ] # subset for Tulare Basin subbasins\n\n# string of subbasin names for subsetting for non-tulare basins\nsbs <- c(paste('5', paste('0', 1:9, sep=\"\"), sep=\"-\"), paste('5', 10:22, sep=\"-\"))\n\nother_cv_basins <- s %>% \n  filter(Basin_ID %in% sbs & !is.na(Subbasin_N)) %>% \n  filter(Basin_Subb != '5-12.01' & Basin_Subb != '5-12.02' & Basin_Subb != '5-02.01' & Basin_Subb != '5-02.02' & Basin_Subb != '5-01.01' & Basin_Subb != '5-01.02')\n\n# define projections as NAD83\ntulare_alluvial <- spTransform(tulare_alluvial, CRS(\"+proj=longlat +ellps=GRS80 +datum=NAD83 +no_defs +towgs84=0,0,0\"))\nother_cv_basins <- spTransform(other_cv_basins, CRS(\"+proj=longlat +ellps=GRS80 +datum=NAD83 +no_defs +towgs84=0,0,0\"))\n\n# merge multiple polygons in tulare_alluvial into one polygon\nlibrary(maptools)\nstr(tulare_alluvial) # 7 polygons\n\n# add an ID column that indicates all 7 lists for each polygon in tulare_alluvial are in 1 ID\ntulare_union <- unionSpatialPolygons(tulare_alluvial, IDs = rep(1, times = 7))\n\n# merge all other_cv_basins for plotting the CV later\nstr(other_cv_basins, max.level = 3, list.len = 100) # 40 polygons\nother_cv_basins_union <- unionSpatialPolygons(other_cv_basins, IDs = rep(1, times = 40))\nplot(other_cv_basins_union)\n\n# write new polygon to a shapefile. first need to convert from spatial polygons to SPDF\ngetwd()\ntulare_union_spdf <- as(tulare_union, \"SpatialPolygonsDataFrame\")\n#writeOGR(tulare_union_spdf, \".\", \"tulare_union\", driver = \"ESRI Shapefile\")\n\n# get California polygon from maps library\nlibrary(maps)\nlibrary(mapdata)\nstates <- ggplot2::map_data(\"state\")\nca_df <- subset(states, region == \"california\")\n\n# first plot the california base map\nca_base <- ggplot(data = ca_df, mapping = aes(x = long, y = lat, group = group)) + \n  coord_fixed(1.3) + \n  geom_polygon(color = \"black\", fill = \"white\") +\n  geom_polygon(data = other_cv_basins_union, aes(x = long, y = lat, group = group), color = 'black', fill = 'white') +\n  geom_polygon(data = tulare_union, fill = \"cornsilk2\", color = 'black') +\n  theme_void()\n\n# now create the tulare base map to use in later maps\ntulare_base <- ggplot() + \n  coord_fixed(1.3) + \n  geom_polygon(data = tulare_union, aes(x = long, y = lat, group = group), color = \"black\", fill = \"cornsilk2\") +\n  theme_void()\n\n# create another tulare base map with cities for displaying now. later the cities will be layered after the points for readability.\ntulare_base_cities <- ggplot() + \n  coord_fixed(1.3) + \n  geom_polygon(data = tulare_union, aes(x = long, y = lat, group = group), color = \"black\", fill = \"cornsilk2\") +\n  geom_point(data = cities, aes(x = longitude, y = latitude)) +\n  geom_text(data = cities, aes(x = longitude, y = latitude, label = city), vjust = 0, nudge_y = -0.1, nudge_x = -0.1) +\n  theme_void()\n\n# extract some coords to begin positioning annotations\ntulare_coords <- tulare_alluvial@polygons[[1]]@Polygons[[1]]@coords\nmin_x <- min(tulare_coords[,1])\nmin_y <- min(tulare_coords[,2])\n\n\n\n# with cowplot\nlibrary(cowplot)\nmap_base_inset <- ggdraw() +\n  draw_plot(tulare_base) +\n  draw_plot(ca_base, 0.05, 0.1, 0.4, 0.4)\n\n# state of CA normal size\nmap_base_inset_2 <- plot_grid(ca_base, tulare_base_cities, ncol = 2)\n\n```\n\n### Examine All Shallow and Deep Well Data\n```{r, warning = FALSE, message = FALSE, results = \"hide\"}\n# all shallow well observations\nall_shallow <- dat %>% \n  filter(DepthClass == \"Shallow\") %>% \n  mutate(has_depth_data = ifelse(!is.na(Depth_ft), TRUE, FALSE)) \n\n# unique shallow well observations\nunique_shallow <- all_shallow[!duplicated(all_shallow$Well_ID), ] # subsets for all unique Well_ID\n\n# map of unique shallow wells\nmap_unique_shallow <- tulare_base +\n  geom_point(data = unique_shallow, aes(x = Longitude, y = Latitude, group = Well_ID, color = Database), size = .5) +\n  geom_point(data = cities, mapping = aes(x = longitude, y = latitude, group = factor(city))) +\n  geom_text(data = cities, mapping = aes(x = longitude, y = latitude, group = factor(city), label = city), vjust = 0, nudge_y = -0.1, nudge_x = -0.1) + \n  labs(caption = \"(a)\") + \n  annotate(\"text\", \n           x = min_x -.2, y = min_y - .45, \n           label = paste(\"n = \", length(unique_shallow$Well_ID))\n           ) +\n  theme(plot.margin = unit(c(0,.5,0,0), \"cm\"), legend.position = c(.8,.8))\n\n# stacked bar plot of unique shallow wells with fill = has_depth_data\np_unique_shallow <- unique_shallow %>% \n  ggplot(aes(x = Year)) + \n  geom_bar(color = \"black\", aes(fill = Database)) +\n  xlab('Year') +\n  ylab('Observations') +\n  xlim(1940, 2020) +\n  guides(fill = FALSE) +\n  theme(plot.margin = unit(c(0,0,.5,.5), \"cm\"))\n\n\n# unique shallow with depth observations\nunique_shallow_with_depth <- unique_shallow %>% \n  filter(!is.na(Depth_ft))\n\n# calculate mean and sd from lognormal distribution using Cox method (Land, 1971)\nlibrary(EnvStats)\nlognorm_shallow <- elnormAlt(unique_shallow_with_depth$Depth_ft, method = \"mvue\", ci = FALSE, ci.type = \"two-sided\", \n    ci.method = \"land\", conf.level = 0.95)\n\nshallow_mean <- round(lognorm_shallow$parameters[1], 2)\nshallow_sd <- round(lognorm_shallow$parameters[1] * lognorm_shallow$parameters[2], 2)\n\n\n# plot histogram of unique shallow wells with depth information\np_unique_shallow_with_depth <- ggplot(unique_shallow_with_depth) +\n  geom_histogram(aes(x = Depth_ft), bins = 100, color = \"black\", fill = '#00BFC4') + \n  annotate(\"text\", \n           y = 150, x = 400, \n           label = paste(\"n = \", length(unique_shallow_with_depth$Well_ID), \"\\n\",\n                         \"μ = \", shallow_mean, \"\\n\",\n                         \"σ = \", shallow_sd)) +\n  xlab('Well Depth (ft)') +\n  theme(plot.margin = unit(c(.5,0,0,.5), \"cm\"))\n\n\n# Now let's repeat these analyses for deep wells:\n\n# all deep well observations\nall_deep <- dat %>% \n  filter(DepthClass == \"Deep\") %>% \n  mutate(has_depth_data = ifelse(!is.na(Depth_ft), TRUE, FALSE)) \n\n# unique shallow well observations\nunique_deep <- all_deep[!duplicated(all_deep$Well_ID), ] # subsets for all unique Well_ID\n\n# map of unique deep wells\nmap_unique_deep <- tulare_base +\n  geom_point(data = unique_deep, aes(x = Longitude, y = Latitude, group = Well_ID, color = Database), size = .5) +\n  geom_point(data = cities, mapping = aes(x = longitude, y = latitude, group = factor(city))) +\n  geom_text(data = cities, mapping = aes(x = longitude, y = latitude, group = factor(city), label = city), vjust = 0, nudge_y = -0.1, nudge_x = -0.1) + \n  labs(caption = \"(a)\") + \n  annotate(\"text\", \n           x = min_x -.2, y = min_y - .45, \n           label = paste(\"n = \", length(unique_deep$Well_ID))\n           ) +\n  theme(plot.margin = unit(c(0,.5,0,0), \"cm\"), legend.position= c(0.8, 0.8))\n\n# stacked bar plot of unique shallow wells with fill = has_depth_data\np_unique_deep <- unique_deep %>% \n  ggplot(aes(x = Year)) + \n  geom_bar(color = \"black\", aes(fill = Database)) +\n  xlab('Year') +\n  ylab('Observations') +\n  labs(caption = \"(b)\") +\n  xlim(1940, 2020) +\n  guides(fill = FALSE) +\n  theme(plot.margin = unit(c(0,0,.5,.5), \"cm\"))\n\n# unique shallow with depth observations\nunique_deep_with_depth <- unique_deep %>% \n  filter(!is.na(Depth_ft))\n\n# calculate mean and sd from lognormal distribution using Cox method (Land, 1971)\nlibrary(EnvStats)\nlognorm_deep <- elnormAlt(unique_deep_with_depth$Depth_ft, method = \"mvue\", ci = FALSE, ci.type = \"two-sided\", \n    ci.method = \"land\", conf.level = 0.95)\n\ndeep_mean <- round(lognorm_deep$parameters[1], 2)\ndeep_sd <- round(lognorm_deep$parameters[1] * lognorm_deep$parameters[2], 2)\n\n# plot histogram \np_unique_deep_with_depth <- ggplot(unique_deep_with_depth, aes(x = Depth_ft)) +\n  geom_histogram(bins = 50, color = \"black\", fill = '#00BFC4') + \n  xlab('Well Depth (ft)') +\n  labs(caption = \"(c)\") +\n  annotate(\"text\", \n           y = 35, x = 1500, \n           label = paste(\"n = \", length(unique_deep_with_depth$Well_ID), \"\\n\",\n                         \"μ = \", deep_mean, \"\\n\",\n                         \"σ = \", deep_sd)) +\n  theme(plot.margin = unit(c(.5,0,0,.5), \"cm\"))\n\n\n# draw inset maps\nmap_unique_shallow_inset <- ggdraw() +\n  draw_plot(map_unique_shallow) +\n  draw_plot(ca_base, 0.05, 0.05, 0.35, 0.35)\n\nmap_unique_deep_inset <- ggdraw() +\n  draw_plot(map_unique_deep) +\n  draw_plot(ca_base, 0.05, 0.05, 0.35, 0.35)\n\n```\n\n### GW Quality Changes in individual wells (Shallow)\n```{r, warning = FALSE, message = FALSE, results = \"hide\"}\n# Shallow wells with Continuous (n >= 25) data\nshallow_continuous_early <- dat[ave(dat$Year, dat$Well_ID, FUN = length) >= 25, ] %>% \n  filter(DepthClass == \"Shallow\" & Year < 2005) %>% \n  group_by(Date, Well_ID, Latitude, Longitude, Database) %>% \n  dplyr::summarise(Result_mean = mean(Result))\n\nshallow_continuous_late <- dat[ave(dat$Year, dat$Well_ID, FUN = length) >= 25, ] %>% \n  filter(DepthClass == \"Shallow\" & Year >= 2005) %>% \n  group_by(Date, Well_ID, Latitude, Longitude, Database) %>% \n  dplyr::summarise(Result_mean = mean(Result))\n  \np_shallow_continuous <- \n  ggplot() + \n  geom_line(data = shallow_continuous_early, aes(x = Date, y = Result_mean, group = Well_ID), alpha = 1/5) + \n  geom_point(data = shallow_continuous_early, aes(x = Date, y = Result_mean, group = Well_ID, color = Database), alpha = 1/3) + \n  geom_line(data = shallow_continuous_late, aes(x = Date, y = Result_mean, group = Well_ID), alpha = 1/5) + \n  geom_point(data = shallow_continuous_late, aes(x = Date, y = Result_mean, group = Well_ID, color = Database), alpha = 1/3) + \n  geom_smooth(data = shallow_continuous_late, color = 'black', se = FALSE, aes(x = Date, y = Result_mean)) +\n  xlab('Time') +\n  ylab('TDS (mg/L)') + \n  xlim(as.Date(\"1940\", \"%Y\"), as.Date(\"2020\", \"%Y\")) +\n  scale_y_log10(breaks = c(100,1000,10000, 100000), labels = comma(c(100,1000,10000, 100000)), limits = c(100,100000)) +\n  guides(color = FALSE) +\n  background_grid(major = \"xy\", minor = \"none\") +\n  theme(plot.margin = unit(c(0,0,0,.5), \"cm\"))\n\n# map for continuous shallow wells\nmap_shallow_continuous <- tulare_base +\n  geom_point(data = shallow_continuous_early, aes(x = Longitude, y = Latitude, group = Well_ID, color = Database), size = .5) +\n  geom_point(data = shallow_continuous_late, aes(x = Longitude, y = Latitude, group = Well_ID, color = Database), size = .5) +\n  geom_point(data = cities, mapping = aes(x = longitude, y = latitude, group = factor(city))) +\n  geom_text(data = cities, mapping = aes(x = longitude, y = latitude, group = factor(city), label = city), vjust = 0, nudge_y = -0.1, nudge_x = -0.1) +\n  annotate(\"text\", \n           x = min_x -.2, y = min_y - .45, \n           label = paste(\"n = \", as.character(\n             length(unique(shallow_continuous_early$Well_ID)) + \n             length(unique(shallow_continuous_late$Well_ID))), sep = \"\")) +\n  theme(plot.margin = unit(c(0,.5,0,0), \"cm\"), legend.position = c(.8,.8))\n\n## Now let's look at discontinuous shallow well data\n\n# Shallow wells with Discontinous (n >= 0) data\nshallow_discontinuous_late <- dat %>% \n  filter(DepthClass == \"Shallow\" & Year >= 1993) %>% \n  group_by(Date, Well_ID, Latitude, Longitude, Database) %>% \n  dplyr::summarise(Result_mean = mean(Result)) \n\nshallow_discontinuous_middle <- dat %>% \n  filter(DepthClass == \"Shallow\" & Year < 1993 & Year >= 1984) %>% \n  group_by(Date, Well_ID, Latitude, Longitude, Database) %>% \n  dplyr::summarise(Result_mean = mean(Result))\n\nshallow_discontinuous_early <- dat %>% \n  filter(DepthClass == \"Shallow\" & Year < 1984) %>% \n  group_by(Date, Well_ID, Latitude, Longitude, Database) %>% \n  dplyr::summarise(Result_mean = mean(Result))\n\np_shallow_discontinuous <- \n  ggplot() + \n  geom_line(data = shallow_discontinuous_late, aes(x = Date, y = Result_mean, group = Well_ID), alpha = 1/5) + \n  geom_point(data = shallow_discontinuous_late, aes(x = Date, y = Result_mean, group = Well_ID, color = Database), alpha = 1/3) + \n  geom_smooth(data = shallow_discontinuous_late, color = 'black', se = FALSE, aes(x = Date, y = Result_mean)) +\n  geom_line(data = shallow_discontinuous_middle, aes(x = Date, y = Result_mean, group = Well_ID), alpha = 1/5) + \n  geom_point(data = shallow_discontinuous_middle, aes(x = Date, y = Result_mean, group = Well_ID, color = Database), alpha = 1/3) + \n  geom_smooth(data = shallow_discontinuous_middle, color = 'black', se = FALSE, aes(x = Date, y = Result_mean)) +\n  geom_line(data = shallow_discontinuous_early, aes(x = Date, y = Result_mean, group = Well_ID), alpha = 1/5) + \n  geom_point(data = shallow_discontinuous_early, aes(x = Date, y = Result_mean, group = Well_ID, color = Database), alpha = 1/3) + \n  xlab('Time') +\n  ylab('TDS (mg/L)') + \n  scale_y_log10(breaks = c(100,1000,10000, 100000), labels = comma(c(100,1000,10000, 100000)), limits = c(100,100000)) +\n  xlim(as.Date(\"1940\", \"%Y\"), as.Date(\"2020\", \"%Y\")) +\n  guides(color = FALSE) +\n  background_grid(major = \"xy\", minor = \"none\") +\n  theme(plot.margin = unit(c(0,0,0,.5), \"cm\"))\n\n# map for discontinuous shallow wells\nmap_shallow_discontinuous <- tulare_base +\n  geom_point(data = shallow_discontinuous_early, aes(x = Longitude, y = Latitude, group = Well_ID, color = Database), size = .5) +\n  geom_point(data = shallow_discontinuous_middle, aes(x = Longitude, y = Latitude, group = Well_ID, color = Database), size = .5) +\n  geom_point(data = shallow_discontinuous_late, aes(x = Longitude, y = Latitude, group = Well_ID, color = Database), size = .5) +\n  geom_point(data = cities, mapping = aes(x = longitude, y = latitude, group = factor(city))) +\n  geom_text(data = cities, mapping = aes(x = longitude, y = latitude, group = factor(city), label = city), vjust = 0, nudge_y = -0.1, nudge_x = -0.1) +\n  annotate(\"text\", \n           x = min_x -.2, y = min_y - .45, \n           label = paste(\"n = \", as.character(\n             length(unique(shallow_discontinuous_early$Well_ID)) +\n             length(unique(shallow_discontinuous_middle$Well_ID)) +\n             length(unique(shallow_discontinuous_late$Well_ID))), sep = \"\")) +\n  theme(plot.margin = unit(c(0,.5,0,0), \"cm\"), legend.position = c(.8,.8))\n\n# draw inset maps\nmap_shallow_discontinuous_inset <- ggdraw() +\n  draw_plot(map_shallow_discontinuous) +\n  draw_plot(ca_base, 0.05, 0.05, 0.35, 0.35)\n\nmap_shallow_continuous_inset <- ggdraw() +\n  draw_plot(map_shallow_continuous) +\n  draw_plot(ca_base, 0.05, 0.05, 0.35, 0.35)\n\n```\n\n### GW Quality Changes in individual wells (Deep)\n```{r, warning = FALSE, message = FALSE, results = \"hide\"}\n# start working with complete data (dat) rather than data with explicit depth (dat_with_depth)\n  \n# Deep wells with Continuous (n >= 25) data\ndeep_continuous_early <- dat[ave(dat$Year, dat$Well_ID, FUN = length) >= 25, ] %>% \n  filter(DepthClass == \"Deep\" & Year < 1980) %>% \n  group_by(Date, Well_ID, Latitude, Longitude, Database) %>% \n  dplyr::summarise(Result_mean = mean(Result))\n\ndeep_continuous_late <- dat[ave(dat$Year, dat$Well_ID, FUN = length) >= 25, ] %>% \n  filter(DepthClass == \"Deep\" & Year >= 1980) %>% \n  group_by(Date, Well_ID, Latitude, Longitude, Database) %>% \n  dplyr::summarise(Result_mean = mean(Result))\n\np_deep_continuous <-\n  ggplot() + \n  geom_line(data = deep_continuous_late, aes(x = Date, y = Result_mean, group = Well_ID), alpha = 1/5) + \n  geom_point(data = deep_continuous_late, aes(x = Date, y = Result_mean, group = Well_ID, color = Database), alpha = 1/3) + \n  geom_smooth(data = deep_continuous_late, color = 'black', se = FALSE, aes(x = Date, y = Result_mean)) +\n  geom_line(data = deep_continuous_early, aes(x = Date, y = Result_mean, group = Well_ID), alpha = 1/5) + \n  geom_point(data = deep_continuous_early, aes(x = Date, y = Result_mean, group = Well_ID, color = Database), alpha = 1/3) + \n  xlab('Time') +\n  ylab('TDS (mg/L)') + \n  xlim(as.Date(\"1940\", \"%Y\"), as.Date(\"2020\", \"%Y\")) +\n  scale_y_log10(breaks = c(100,1000,10000, 100000), labels = comma(c(100,1000,10000, 100000)), limits = c(100,100000)) +\n  guides(color = FALSE) +\n  background_grid(major = \"xy\", minor = \"none\") +\n  theme(plot.margin = unit(c(0,0,0,.5), \"cm\"))\n\n# map for continuous deep wells\nmap_deep_continuous <- tulare_base +\n  geom_point(data = deep_continuous_early, aes(x = Longitude, y = Latitude, group = Well_ID, color = Database), size = .5) +\n  geom_point(data = deep_continuous_late, aes(x = Longitude, y = Latitude, group = Well_ID, color = Database), size = .5) +\n  geom_point(data = cities, mapping = aes(x = longitude, y = latitude, group = factor(city))) +\n  geom_text(data = cities, mapping = aes(x = longitude, y = latitude, group = factor(city), label = city), vjust = 0, nudge_y = -0.1, nudge_x = -0.1) +\n  annotate(\"text\", \n           x = min_x + .2, y = min_y - .45,\n           label = paste(\"n = \", as.character(\n             length(unique(deep_continuous_early$Well_ID)) +\n             length(unique(deep_continuous_late$Well_ID))), sep = \"\")) +\n  theme(plot.margin = unit(c(0,.5,0,0), \"cm\"), legend.position = c(.8,.8))\n\n           \n## Now let's look at deep discontinuous well data\n\n# Deep wells with Discontinous (n >= 0) data\ndeep_discontinuous_late <- dat %>% \n  filter(DepthClass == \"Deep\" & Year >= 1970) %>% \n  group_by(Date, Well_ID, Latitude, Longitude, Database) %>% \n  dplyr::summarise(Result_mean = mean(Result))\n\ndeep_discontinuous_early <- dat %>% \n  filter(DepthClass == \"Deep\" & Year < 1970 & Year > 1930) %>% \n  group_by(Date, Well_ID, Latitude, Longitude, Database) %>% \n  dplyr::summarise(Result_mean = mean(Result))\n\np_deep_discontinuous <-\n  ggplot() + \n  geom_line(data = deep_discontinuous_late, aes(x = Date, y = Result_mean, group = Well_ID), alpha = 1/5) + \n  geom_point(data = deep_discontinuous_late, aes(x = Date, y = Result_mean, group = Well_ID, color = Database), alpha = 1/3) + \n  geom_smooth(data = deep_discontinuous_late, color = 'black', se = FALSE, aes(x = Date, y = Result_mean)) +\n  geom_line(data = deep_discontinuous_early, aes(x = Date, y = Result_mean, group = Well_ID), alpha = 1/5) + \n  geom_point(data = deep_discontinuous_early, aes(x = Date, y = Result_mean, group = Well_ID, color = Database), alpha = 1/3) + \n  xlab('Time') +\n  ylab('TDS (mg/L)') + \n  xlim(as.Date(\"1940\", \"%Y\"), as.Date(\"2020\", \"%Y\")) +\n  scale_y_log10(breaks = c(100,1000,10000, 100000), labels = comma(c(100,1000,10000, 100000)), limits = c(100,100000)) +\n  guides(color = FALSE) +\n  background_grid(major = \"xy\", minor = \"none\") +\n  theme(plot.margin = unit(c(0,0,0,.5), \"cm\"))\n\n# map for discontinuous deep wells\nmap_deep_discontinuous <- tulare_base +\n  geom_point(data = deep_discontinuous_early, aes(x = Longitude, y = Latitude, group = Well_ID, color = Database), size = .5, alpha = 1/3) +\n  geom_point(data = deep_discontinuous_late, aes(x = Longitude, y = Latitude, group = Well_ID, color = Database), size = .5, alpha = 1/3) +\n  geom_point(data = cities, mapping = aes(x = longitude, y = latitude, group = factor(city))) +\n  geom_text(data = cities, mapping = aes(x = longitude, y = latitude, group = factor(city), label = city), vjust = 0, nudge_y = -0.1, nudge_x = -0.1) +\n  annotate(\"text\", \n           x = min_x + .2, y = min_y - .45,\n           label = paste(\"n = \", as.character(\n             length(unique(deep_discontinuous_late$Well_ID)) +\n             length(unique(deep_discontinuous_early$Well_ID))), sep = \"\")) +\n  theme(plot.margin = unit(c(0,.5,0,0), \"cm\"), legend.position = c(.8,.8))\n\n# facet map for discontinuous deep wells\n# get count data for each facet\ndeep_facet_count <- dat %>% \n  filter(DepthClass == \"Deep\" & Year >= 1970) %>% \n  group_by(Database) %>% \n  dplyr::summarise(n = paste(\"n = \", n(), sep =\"\"))\n\n# make the facet map\nmap_deep_discontinuous_facet <- tulare_base +\n  geom_point(data = deep_discontinuous_early, aes(x = Longitude, y = Latitude, group = Well_ID, color = Database), size = .5, alpha = 1/3) +\n  geom_point(data = deep_discontinuous_late, aes(x = Longitude, y = Latitude, group = Well_ID, color = Database), size = .5, alpha = 1/3) +\n  geom_point(data = cities, mapping = aes(x = longitude, y = latitude, group = factor(city))) +\n  geom_text(data = cities, mapping = aes(x = longitude, y = latitude, group = factor(city), label = city), vjust = 0, nudge_y = -0.1, nudge_x = -0.1) +\n  theme(plot.margin = unit(c(0,.5,0,0), \"cm\"), legend.position = c(.8,.3)) + \n  facet_wrap(~Database) + \n  geom_text(data = deep_facet_count, aes(min_x + .2, min_y - 1.1, label = n), parse = FALSE)\n\n# draw inset maps\nmap_deep_discontinuous_inset <- ggdraw() +\n  draw_plot(map_deep_discontinuous) +\n  draw_plot(ca_base, 0.05, 0.05, 0.35, 0.35)\n\nmap_deep_continuous_inset <- ggdraw() +\n  draw_plot(map_deep_continuous) +\n  draw_plot(ca_base, 0.05, 0.05, 0.35, 0.35)\n```\n\n***\n\n# Results & Discussion\n\n### Study Area\n##### The Tulare basin comprises Fresno, Kings, Kern, and Tualre county and covers 502,5110 acres (roughly 200,000 km$^2$) of the southern portion of California's Central Valley. The Tulare basin is an arid, agriculturally-dominated landscape, and heavily dependent on groundwater. Notable centers of high population density include the cities of Fresno, Visalia, and Bakersfield. Data were stratified by depth to represent: (1) a **shallow** depth class generally representing domestic drinking-water supply wells, and (2) a **deep** depth class generally representing municipal drinking-water supply wells and agricultural production wells.\n\n***\n\n##### Figure 1: Study Area\n```{r, warning = FALSE, message = FALSE, results = \"hide\", echo = FALSE}\nmap_base_inset\n```\n\n***\n\n### Shallow Wells\n##### When depth information was not present, _Domestic_ and _Monitoring_ wells received a classification of \"Shallow\" (for a full description of well classification, see the Appendix). Not all wells came with a recorded depth. Of the 998 shallow wells in this study, roughly half (468) contained explicit depth information, and all of these wells with depth information came from the USGS database. These wells are shown in blue in Figure 2. \n\n##### Shallow wells with depth data are well distributed spatially. They were mostly sampled during the period from 1980-2000, and have a mean depth of 67.67 ft., which agrees with the estimate of 60.95 ft., calculated with the Land Method [@Land1971] from a lognormal distribution fitted to these data. This analysis uses all 998 wells classified as \"Shallow\"; the separation of wells based on depth data served to estimate the mean depth of the wells for which depth data was present.\n\n***\n\n```{r, warning = FALSE, message = FALSE, echo = FALSE}\nleaflet_DepthClass(\"Shallow\")\n```\n\n***\n\n##### Figure 2: All Shallow Wells\n\n```{r, warning = FALSE, message = FALSE, results = \"hide\", echo = FALSE}\nggdraw() +\n  draw_plot(map_unique_shallow_inset, x = 0, y = 0, width = .5, height = 1) +\n  draw_plot(p_unique_shallow, x = .5, y = .5, width = .5, height = .5) +\n  draw_plot(p_unique_shallow_with_depth, x = .5, y = 0, width = .5, height = 0.5) +\n  draw_plot_label(label = c(\"(A)\", \"(B)\", \"(C)\"),\n                  x = c(0, 0.5, 0.5), y = c(1, 1, 0.5))\n```\n\n###### **(A)** All unique shallow well observations, including wells with continuous and discontinuous data. **(B)** All unique shallow wells with depth data are shown in blue, whereas shallow wells without explicit depth data are shown in red. **(C)** All unique shallow wells with depth data follow a lognormal distribution. Parameters were calculated using the Land Method [@Land1971]. \n\n***\n\n### Shallow Wells with Continuous Data\n##### _Continuous data_ was defined as a well having >= 25 observations, independent of time. That is to say, a well with 25 observations on a single day counted as a well with \"continuous data\". Only 52 wells offered continuous data, and these data offer poor spatial coverage. Within these wells, continuous data begins around 1983. From the 10-year time period between 2005-2014, where the data is clustered, average groundwater TDS in these wells increases by roughly 4,000 mg/L, although much greater changes in TDS are observed in some wells rather than others. This indicates that in some areas, groundwater quality deterioration proceeds at a higher rate than in others.\n\n***\n\n##### Figure 3: Shallow Wells with Continuous Data\n```{r, warning = FALSE, message = FALSE, results = \"hide\", echo = FALSE}\nplot_grid(map_shallow_continuous_inset, p_shallow_continuous, labels = c(\"(A)\", \"(B)\"))\n```\n\n###### **(a)** Unique shallow well observations with continuous (>= 25 observations) data are well-dispersed spatially. **(b)** A smoothed regression through the continuous data in the time from 2005-2014, shows an increasing trend in regional GW TDS.\n\n***\n\n### Shallow Wells with Continuous and Discontinuous Data\n##### Wells with discontinuous (< 25 observations) data make up the vast majority of the 998 Shallow Wells. They are well distributed spatially, and cluster between the dates of 1984-1993 and 1993-2014. Smoothed averages over these clusters of data show increases in TDS by roughly 5,000 and 2,000 mg/L TDS respectively. This increasing trend agrees with the data observed in continuous shallow well data.\n\n***\n\n##### Figure 4: Shallow Wells with Continuous and Discontinuous Data\n```{r, warning = FALSE, message = FALSE, results = \"hide\", echo = FALSE}\nplot_grid(map_shallow_discontinuous_inset, p_shallow_discontinuous, labels = c(\"(A)\", \"(B)\"))\n```\n\n###### **(A)** Unique shallow well observations with continuous (>= 25 observations) and discontnuous data are well-dispersed spatially. 18 outlying wells were removed. **(B)** A smoothed regression line in two time regions, 1984-1993 and 1993-2014, where data is clustered, shows increasing trends in regional GW quality in shallow wells.\n\n***\n\n### Deep Wells\n##### In the absence of depth data, _Irrigation_, _Industrial_, and _Municipal Supply Wells_ were given a classification of \"Deep\" (for more detail on depth classification, see the Appendix). 616 of the 2,776 Deep Wells came from the USGS database, and thus contained depth information. These deep wells are well-distributed and their mean depth is calculated as 653.81 ft, which agrees with the estimate from a lognormal distribution model of 671.61 feet.\n\n##### In Figures 6 and 7, note the scale of the y axis between the shallow and deep wells varies by an order of magnitude. Inorganic water quality is generally better in deep wells, although the continuous and discontinuous deep well data suggests it declines in inorganic water quality.\n\n***\n\n```{r, warning = FALSE, message = FALSE, echo = FALSE}\nleaflet_DepthClass(\"Deep\")\n```\n\n***\n\n##### Figure 5: All Deep Wells\n```{r, warning = FALSE, message = FALSE, results = \"hide\", echo = FALSE}\nggdraw() +\n  draw_plot(map_unique_deep_inset, x = 0, y = 0, width = .5, height = 1) +\n  draw_plot(p_unique_deep, x = .5, y = .5, width = .5, height = .5) +\n  draw_plot(p_unique_deep_with_depth, x = .5, y = 0, width = .5, height = 0.5) +\n  draw_plot_label(label = c(\"(A)\", \"(B)\", \"(C)\"),\n                  x = c(0, 0.5, 0.5), y = c(1, 1, 0.5))\n\n```\n\n###### **(A)** All unique deep well observations, including wells with continuous and discontinuous data. **(B)** All unique deep wells with depth data are shown in blue, whereas deep wells without explicit depth data are shown in red. **(C)** All unique deep wells with depth data follow a lognormal distribution. Parameters were calculated using the Land Method [@Land1971]. \n\n***\n\n### Deep Wells with Continuous Data\n##### Like shallow wells, deep wells with continuous data are not very well-distributed, highlighting the lack of robust water quality data in the region. 118 deep wells offer continuous data. Nonetheless, these continuous data offer greater temporal coverage than shallow well data (the result of municipal supply well sampling protocol) and show a clear increasing signal from the period between 1980-2014 (Figure 6).\n\n\n***\n\n##### Figure 6: Deep Wells with Continuous Data\n```{r, warning = FALSE, message = FALSE, results = \"hide\", echo = FALSE}\nplot_grid(map_deep_continuous_inset, p_deep_continuous, labels = c(\"(A)\", \"(B)\"))\n```\n\n###### **(A)** Deep wells with continuous (>= 25 observations) data are well-dispersed spatially. **(B)** A smoothed regression line from 1980-2014, where data is clustered, shows an increasing trend in regional GW TDS in deep wells.\n\n***\n\n### Deep Wells with Continuous and Discontinuous Data\n##### When discontinuous data is considered, spatial coverage of deep wells vastly increases. Deep wells are clustered around the urban centers of Fresno, Visalia and Bakersfield which is unsurprising, as industrial, agricultural, and notably, municipal supply water use converges on these urban loci The data temporally clusters around sampling events, and average groundwater TDS tends to increase from 1970-2014.\n\n***\n\n##### Figure 7: Deep Wells with Continuous Data\n```{r, warning = FALSE, message = FALSE, results = \"hide\", echo = FALSE}\nplot_grid(map_deep_discontinuous_inset, p_deep_discontinuous, labels = c(\"(A)\", \"(B)\"))\nplot_grid(map_deep_discontinuous_facet, labels = \"(C)\")\n```\n\n###### **(A)** Unique deep well observations with continuous (>= 25 observations) and discontnuous data are well-dispersed spatially. 20 outlying wells were removed. **(B)** A smoothed regression line from 1970-2014, where data is clustered, shows an increasing trend in regional GW TDS in deep wells. **(C)** Deep groundwater quality data by Database. Counts refer to the number of unique observations.\n\n***\n\n# Appendix\n### Depth Class\n##### Exerpt from “Initial Conceptual Model (ICM) Technical Services Tasks 7 and 8 – Salt and Nitrate Analysis for the Central Valley Floor and a Focused Analysis of Modesto and Kings Subregions Final Report.” [@LarryWalkerAssociates2013]:\n>Wells were classified into three depth classes (Shallow, Deep, and Unknown) based on information provided by the original source, as shown in Table 3-2. Most wells in the database did not contain quantitative information on well depth or screened interval; however, other information such as well type was used when available to infer the depth from which a well was sampled. Only the USGS database contained quantitative information regarding well depth. For wells lacking a specified value of well depth, the well type was used to infer the depth (see Table 3-2 for examples). Wells in the DWR, GeotrackerGAMA, and RWQCB WDR Dairy Data databases sometimes contain a description of the well type which enabled categorization of the well into a depth class. All wells from the DPH database were assumed to be drinking water supply wells.\nIrrigation/agricultural, industrial, and municipal supply wells were classified as “Deep” whereas domestic wells and monitoring wells were classified as “Shallow”. All DPH wells were therefore classified as “Deep” as these were all assumed to be drinking water supply wells. All other well types were classified as “Unknown”.\nA large number of USGS wells provided numerical values for well depth; therefore, these were used when provided. USGS wells were assigned a depth class based on the 20-year travel depth for a particular CVHM cell that it was located within. Wells with a depth less than the 20-year travel depth were classified as “Shallow,” and those below the 20-year travel depth were classified as “Deep”. Wells without depth information or a well type were classified as “Unknown”. \n\n***\n\n# References\n\n\n[^1]: [United States Geologic Survey](https://www.usgs.gov/)\n[^2]: [California Department of Public Health](https://www.cdph.ca.gov/)\n[^3]: [Groundwater Ambient Monitoring and Assessment Program](http://www.swrcb.ca.gov/gama/)\n[^4]: [Environmental Defense Fund](https://www.edf.org/) \n[^5]: [California Department of Water Resources](http://www.water.ca.gov/)\n\n",
    "created" : 1520891604828.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1427056210",
    "id" : "F1405040",
    "lastKnownWriteTime" : 1520893143,
    "last_content_update" : 1520893143388,
    "path" : "~/GitHub/Regional_GW_Quality_Stats/Tulare_well_stats.Rmd",
    "project_path" : "Tulare_well_stats.Rmd",
    "properties" : {
        "last_setup_crc32" : "8F99DE0Ebb338d19"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}